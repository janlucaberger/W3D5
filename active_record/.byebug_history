c
exit
self.to_s.downcase
exit
self
@@asoc_options
c
exit
options
c
options
foreign_key
primary_key
c
model_class
primary_key
foreign_key
c
xcd
c
exit
self.assoc_options
self
exit
self.assoc_options
self
exit
self
exit
thru_model.first.attributes[join_key]
thru_model.attributes[join_key]trh
thru_model.attributes[join_key]
exit
foreign_key
exit
thru_model
n
thru_model
exit
thru_model = thru_class.where("#{thru_primary}" => self.attributes[thru_foreign])
thru_model = thru_class.where("#{thru_primary_key}" => self.attributes[thru_foreign])
exit
thru_primary = through_options.primary_key
thru_class = through_options.class_name.constantize
exit
foreign_key
exit
through_options
source_options
exit
self.class.assoc_options[through_name]
self.class.assoc_options
self.class
exit
model_class.constantize
model_class
exit
options
options.class_name
c
exit
options.class_name
options
options[:class_name]
c
exit
options
exit
self.assoc_options
exit
self.assoc_options
self
exit
ecxit
exit
self.class.assoc_options
exit
self.class.
self.class.methods - Object.class.methods
self.class.methods
self.class.class_variable_get(assoc_options)
self.class
self.class.class_variable_get(:assoc_options)
self
exit
self.class.assoc_options[:human]
self.class.assoc_options
exit
self.assoc_options
self
exit
cat_assoc_options
cats_assoc_options
exit
self.attributes
self.class
self
c
self
exit
through_options
exit
se
self
self.class
options
c
exit
eixt
options
c
exit
options
c
exit
through_name
c
exit
self.class
self
selfd
c
exit
self.assoc_options
c
exit
parent.foreign_key
parent
exit
self.class.assoc_options
self.class_assoc_options
@@assoc_options
exit
eixt
self.class.e
self.assoc_options
self.class.assoc_options
self
self.assoc_options
exit
foreign_key
variable
exit
var
exit
eixt
ezxit
c
exit
parent.instance_variables
parent.each
parent
exit
c
exit
selfexit
self
foreign_key
model_class.find(1)
model_class
foreign_key
self.attributes
c
exit
self.class.to_s
self.class
c
exit
self.class
self
name
self
seldf
exit
parent.model_class
parent
c
 c
exit
primary_key
exit
self[foreign_key]
self.attributes[foreign_key]
self[foreign_key]
foreign_key
foreign.key
self
c
exit
eixt
esxit
self
foreign_key.to_s
foreign_ley.to_s
model_class.where(id: foreign_key.to_s)
c
exit
model_class
primary_key
foreign_key
exit
self.class.where
self.class
self.where
self
exit
ezxit
primary_key
exit
parent.model_class
parent.model_clas
exit
parent.model_class
parent.model_clas
forK
exit
vars
exit
var
vars
exit
v
exit
BelongsToOptions.newexit
BelongsToOptions.new
BelongsToOptions
exit
self
exit
@class_name
c
@class_name
c
@class_name
exit
self.table_name
col_vals
where_string
exit
self
self.class
results
exit
params
col_vals
where_string
exit
self.table_name
col_vals
set_string
c
n
exit
para
params
c
